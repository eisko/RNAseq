grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
c("Sham_down", "Aff_up"),
fill=c("green", "blue"),
alpha=c(0.5,0.5),
cex = 2,
cat.fontface=4,
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
c("Sham_down", "Aff_up"),
fill=c("green", "blue"),
alpha=c(0.5,0.5),
cex = 2,
fontfamily = "sans"
cat.fontface=4,
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
c("Sham_down", "Aff_up"),
fill=c("green", "blue"),
alpha=c(0.5,0.5),
cex = 2,
fontfamily = "sans",
cat.fontface=4,
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
c("Sham_down", "Aff_up"),
fill=c("green", "blue"),
alpha=c(0.5,0.5),
cex = 1.5,
fontfamily = "sans",
cat.fontface=4,
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
c("Sham_down", "Aff_up"),
fill=c("green", "blue"),
alpha=c(0.5,0.5),
cex = 1.5,
fontfamily = "sans",
cat.fontface=2,
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
c("Sham_down", "Aff_up"),
fill=c("green", "blue"),
alpha=c(0.5,0.5),
cex = 1.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
fill=c("green", "blue"),
alpha=c(0.5,0.5),
cex = 1.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
fill=c("green", "blue"),
alpha=c(0.25,0.25),
cex = 1.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.25,0.25),
cex = 1.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists1 <- list(sham_up$gene_name, aff_down$gene_name)
names(geneLists1) = c("Sham_up", "Aff_down")
VENN.LIST1 <- geneLists1
grid.newpage()
# note length(sham_up) < length(aff_down)
# category names = c(bigger group, smaller group)
vennplot1 <- draw.pairwise.venn(length(sham_up$gene_name), length(aff_down$gene_name), length(intersect(sham_up$gene_name, aff_down$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5,
main="Sham_down vs Aff_up", main.cex = 2)
geneLists1 <- list(sham_up$gene_name, aff_down$gene_name)
names(geneLists1) = c("Sham_up", "Aff_down")
VENN.LIST1 <- geneLists1
grid.newpage()
# note length(sham_up) < length(aff_down)
# category names = c(bigger group, smaller group)
vennplot1 <- draw.pairwise.venn(length(sham_up$gene_name), length(aff_down$gene_name), length(intersect(sham_up$gene_name, aff_down$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5)
geneLists1 <- list(sham_up$gene_name, aff_down$gene_name)
names(geneLists1) = c("Sham_up", "Aff_down")
VENN.LIST1 <- geneLists1
grid.newpage()
# note length(sham_up) < length(aff_down)
# category names = c(bigger group, smaller group)
vennplot1 <- draw.pairwise.venn(length(sham_up$gene_name), length(aff_down$gene_name), length(intersect(sham_up$gene_name, aff_down$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
lwd = 0.5
fontfamily = "sans",
geneLists1 <- list(sham_up$gene_name, aff_down$gene_name)
names(geneLists1) = c("Sham_up", "Aff_down")
VENN.LIST1 <- geneLists1
grid.newpage()
# note length(sham_up) < length(aff_down)
# category names = c(bigger group, smaller group)
vennplot1 <- draw.pairwise.venn(length(sham_up$gene_name), length(aff_down$gene_name), length(intersect(sham_up$gene_name, aff_down$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
lwd = 0.5,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5)
geneLists1 <- list(sham_up$gene_name, aff_down$gene_name)
names(geneLists1) = c("Sham_up", "Aff_down")
VENN.LIST1 <- geneLists1
grid.newpage()
# note length(sham_up) < length(aff_down)
# category names = c(bigger group, smaller group)
vennplot1 <- draw.pairwise.venn(length(sham_up$gene_name), length(aff_down$gene_name), length(intersect(sham_up$gene_name, aff_down$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
lwd = 0.75,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5)
geneLists1 <- list(sham_up$gene_name, aff_down$gene_name)
names(geneLists1) = c("Sham_up", "Aff_down")
VENN.LIST1 <- geneLists1
grid.newpage()
# note length(sham_up) < length(aff_down)
# category names = c(bigger group, smaller group)
vennplot1 <- draw.pairwise.venn(length(sham_up$gene_name), length(aff_down$gene_name), length(intersect(sham_up$gene_name, aff_down$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
lwd = 0.85,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5)
geneLists1 <- list(sham_up$gene_name, aff_down$gene_name)
names(geneLists1) = c("Sham_up", "Aff_down")
VENN.LIST1 <- geneLists1
grid.newpage()
# note length(sham_up) < length(aff_down)
# category names = c(bigger group, smaller group)
vennplot1 <- draw.pairwise.venn(length(sham_up$gene_name), length(aff_down$gene_name), length(intersect(sham_up$gene_name, aff_down$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
lwd = 0.95,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5)
geneLists2 <- list(sham_down$gene_name, aff_up$gene_name)
names(geneLists2) = c("Sham_down", "Aff_up")
VENN.LIST2 <- geneLists2
# note: length(sham_down) > length(aff_up)
grid.newpage()
vennplot2 <- draw.pairwise.venn(length(sham_down$gene_name), length(aff_up$gene_name), length(intersect(sham_down$gene_name, aff_up$gene_name)),
fill=c("darkmagenta", "darkblue"),
alpha=c(0.5,0.5),
cex = 1.5,
lwd = 0.95,
fontfamily = "sans",
cat.fontfamily = "sans",
cat.cex = 1.5)
write.table(pData(bg_filt), "all_pData.tsv", sep="\t", quote=FALSE, row.names = FALSE)
# output table with all gene results in all samples for analysis
# 5/3/19
# set working directory
setwd("~/code/RnaSeq/ballgown")
# Make sure to necessary packages are installed
library(ballgown)
library(genefilter)
library(dplyr)
library(devtools)
#load bg object
# see "load_bg.R" for making of ballgown (bg) object and subsets of bg object
# ballgown object of all data is loaded as bg
load("Vanc_bg.rda")
# set working directory
setwd("~/code/RnaSeq/ballgown")
## write out tables of gene expression
# Filter low-abundance genes. Here we remove all transcripts with a variance across the samples of less than one
bg_filt = subset(bg,"rowVars(texpr(BG)) > 1", genomesubset=TRUE)
# Generate .gtc file for GSEA application (gene expression output)
gene_expr <- gexpr(bg_filt)
gene_expr <- cbind(NA, gene_expr)
header <- data.frame(c("#1.2", nrow(gene_expr)), c(NA, ncol(gene_expr)))
write.table(header, "all_gexpr.tsv", sep="\t", quote=FALSE)
write.table(gene_expr, "all_gexpr.tsv",sep=""), sep="\t", quote=FALSE, append = TRUE)
write.table(pData(bg_filt), "all_pData.tsv", sep="\t", quote=FALSE, row.names = FALSE)
# output table with all gene results in all samples for analysis
# 5/3/19
# set working directory
setwd("~/code/RnaSeq/ballgown")
# Make sure to necessary packages are installed
library(ballgown)
library(genefilter)
library(dplyr)
library(devtools)
#load bg object
# see "load_bg.R" for making of ballgown (bg) object and subsets of bg object
# ballgown object of all data is loaded as bg
load("Vanc_bg.rda")
# set working directory
setwd("~/code/RnaSeq/ballgown")
## write out tables of gene expression
# Filter low-abundance genes. Here we remove all transcripts with a variance across the samples of less than one
bg_filt = subset(bg,"rowVars(texpr(bg)) > 1", genomesubset=TRUE)
# Generate .gtc file for GSEA application (gene expression output)
gene_expr <- gexpr(bg_filt)
gene_expr <- cbind(NA, gene_expr)
header <- data.frame(c("#1.2", nrow(gene_expr)), c(NA, ncol(gene_expr)))
write.table(header, "all_gexpr.tsv", sep="\t", quote=FALSE)
write.table(gene_expr, "all_gexpr.tsv",sep=""), sep="\t", quote=FALSE, append = TRUE)
write.table(pData(bg_filt), "all_pData.tsv", sep="\t", quote=FALSE, row.names = FALSE)
write.table(gene_expr, "all_gexpr.tsv", sep="\t", quote=FALSE, append = TRUE)
write.table(pData(bg_filt), "all_pData.tsv", sep="\t", quote=FALSE, row.names = FALSE)
# Generate .gtc file for GSEA application (gene expression output)
t_expr <- texpr(bg_filt)
write.table(t_expr, "all_texpr.tsv", sep="\t", quote=FALSE)
]write.table(pData(bg_filt), "all_pData.tsv", sep="\t", quote=FALSE, row.names = FALSE)
write.table(pData(bg_filt), "all_pData.tsv", sep="\t", quote=FALSE, row.names = FALSE)
# Load all attributes including gene name
bg_filt_table = texpr(bg_filt , 'all')
bg_filt_gene_names = unique(bg_filt_table[, 9:10])
write.table(bg_filt_table, "all_texpr.tsv", sep="\t", quote=FALSE)
?ballgown
# Load all attributes including gene name
bg_filt_table = gexpr(bg_filt , 'TPM')
# Load all attributes including gene name
bg_filt_table = gexpr(bg_filt , 'FPKM')
# Load all attributes including gene name
bg_filt_table = gexpr(bg_filt)
View(bg_filt_table)
write.table(bg_filt_table, "all_texpr.tsv", sep="\t", quote=FALSE)
write.table(bg_filt_table, "all_gexpr.tsv", sep="\t", quote=FALSE)
browseVignettes("ballgown")
knitr::opts_chunk$set(echo = TRUE)
library(ballgown)
library(genefilter)
library(dplyr)
library(devtools)
load("Vanc_bg.rda")
pData(bg)
View(bg)
??transcriptIDs
transcript_expression = texpr(bg)
View(transcript_expression)
??plotTranscripts
plotTranscripts(gene='Nnt', gown=bg,
meas='FPKM', colorby='transcript',
main='transcripts from gene XLOC_000454: EI_01, FPKM')
plotTranscripts(gene='ENSMUSG00000037022', gown=bg,
meas='FPKM', colorby='transcript',
main='transcripts from gene XLOC_000454: EI_01, FPKM')
plotTranscripts(gene='ENSMUSG00000037022', gown=bg, samples = c('EI_01', 'EI_07', 'EI_13', 'EI_19' )
meas='FPKM', colorby='transcript',
plotTranscripts(gene='ENSMUSG00000037022', gown=bg, samples = c('EI_01', 'EI_07', 'EI_13', 'EI_19'),
meas='FPKM', colorby='transcript',
main='transcripts from gene XLOC_000454: EI_01, FPKM')
plotTranscripts(gene='ENSMUSG00000037022', gown=bg, samples = sampleNames(bg),
meas='FPKM', colorby='transcript',
main='transcripts from gene ENSMUSG00000037022: EI_01, FPKM')
plotTranscripts(gene='ENSMUSG00000037022', gown=bg, samples = c('EI_01', 'EI_07', 'EI_13', 'EI_19'),
meas='FPKM', colorby='transcript',
main='transcripts from gene ENSMUSG00000037022: EI_01, FPKM')
plotTranscripts(gene='ENSMUSG00000025453', gown=bg, samples = c('EI_01', 'EI_07', 'EI_13', 'EI_19'),
meas='FPKM', colorby='transcript',
main='transcripts from gene Nnt(1): EI_01, EI_07, EI_13, EI_19, FPKM')
plotTranscripts(gene='ENSMUSG00000116207', gown=bg, samples = c('EI_01', 'EI_07', 'EI_13', 'EI_19'),
meas='FPKM', colorby='transcript',
main='transcripts from gene Nnt(2): EI_01, EI_07, EI_13, EI_19, FPKM')
shiny::runApp('Volcanos')
shiny::runApp('Volcanos')
shiny::runApp('Volcanos')
shiny::runApp('Volcanos')
runApp('Volcanos')
setwd("~/code/RnaSeq/ballgown")
?view
view("sham/sham_gene_results.tsv")
View("sham/sham_gene_results.tsv")
setwd("~/code/RnaSeq/ballgown/aff")
View(aff_gene_results.tsv)
View("aff_gene)results.tsv")
aff_gene_results <- read.delim("~/code/RnaSeq/ballgown/aff/aff_gene_results.tsv")
View(aff_gene_results)
sham_gene_results <- read.delim("~/code/RnaSeq/ballgown/sham/sham_gene_results.tsv")
View(sham_gene_results)
runApp('~/code/RnaSeq/ballgown/Volcanos')
runApp('~/code/RnaSeq/ballgown/Volcanos')
runApp('~/code/RnaSeq/ballgown/Volcanos')
runApp('~/code/RnaSeq/ballgown/Volcanos')
??numericInput
runApp('~/code/RnaSeq/ballgown/Volcanos')
runApp('~/code/RnaSeq/ballgown/Volcanos')
runApp('~/code/RnaSeq/ballgown/Volcanos')
# set working directory
setwd("~/code/RnaSeq/ballgown")
# Make sure to necessary packages are installed
library(ballgown)
library(genefilter)
library(dplyr)
library(devtools)
library(gplots)
library(ggplot2)
library(ggbiplot)
library(ggfortify)
library(calibrate)
#load bg object
# see "load_bg.R" for making of ballgown (bg) object and subsets of bg object
load("Vanc_bg.rda")
# set working directory
setwd("~/code/RnaSeq/ballgown")
# define bg variable for script
# set subset if needed
BG <- subset(bg, "treatment=='sham'", genomesubset=FALSE)
#filename to use for outputs
file <- "sham"
# define covariate to make comparisons
# if bg subset = treatment (sham/vanc), then covariate = condition (aff/unaff)
# if bg subset = condition (aff/unaff), then covariate = treatment (sham/vanc)
covariate <- "condition"
# set qvalue used to cut off significant findings
q <- 0.1
q2 <- 0.1
fch <- 1
# if sham/vanc group, set to -1
# if aff/unaff group, set to 1
i = -1
# list of genes of interest (goi) to plot on volcano plot
goi <- c("Mmaa", "Pigr", "Fgf21", "NMNT")
# list of genes of interest (goi) to plot on volcano plot
goi <- c("Mmaa", "Pigr", "Fgf21", "Nmnt")
setwd(file)
browseVignettes("ballgown")
gene_expression <- gexpr(bg)
runApp('~/code/RnaSeq/ballgown/Volcanos')
structure(BG)
pData(BG)
BG@meas
??filter
View(bg)
View(BG)
gene_expression <- gexpre(bg, meas="FPKM")
gene_expression <- gexpr(bg, meas="FPKM")
??gexpr
setwd("~/code/RnaSeq/ballgown/Nnmt")
setwd("~/code/RnaSeq/ballgown/Nnmt")
nnmtData <- read.csv("Nnmt_FPKM.csv")
View(nnmtData)
nnmtData <- t(nnmtData)
View(nnmtData)
pData <- read.csv("~/code/RnaSeq/ballgown/Vanc_pdata.csv")
View(pData)
nnmtData <- left_join(nnmtData, pData)
library(dplyr)
nnmtData <- left_join(nnmtData, pData)
browseVignettes("dplyr")
nnmtData <- left_join(nnmtData, pData, by = "X.name", "sample_id")
nnmtData <- left_join(nnmtData, pData, by = c("X.name"="sample_id"))
str(nnmtData)
nnmtData <- as.data.frame(t(nnmtData))
pData <- read.csv("~/code/RnaSeq/ballgown/Vanc_pdata.csv")
nnmtData <- left_join(nnmtData, pData, by = c("X.name"="sample_id"))
nnmtData <- left_join(nnmtData, pData, by = c("X.NAME"="sample_id"))
View(nnmtData)
setwd("~/code/RnaSeq/ballgown/Nnmt")
nnmtData <- read.csv("Nnmt_FPKM.csv")
nnmtData <- as.data.frame(t(nnmtData))
View(nnmtData)
nnmtData[1,]
nnmtData[2,]
??t()
?as.data.frame
nnmtData <- read.csv("Nnmt_FPKM.csv")
nnmtData[,1]
nnmtDataT <- as.data.frame(t(nnmtData), colnames = c("sample_id", "Nnmt_FPKM"))
nnmtDataT <- nnmtDataT[2:,]
nnmtDataT <- nnmtDataT[2::,]
nnmtDataT <- nnmtDataT[2:length(nnmtDataT),]
nnmtData <- read.csv("Nnmt_FPKM.csv")
nnmtDataT <- as.data.frame(t(nnmtData), colnames = c("sample_id", "Nnmt_FPKM"))
View(nnmtDataT)
nnmtDataT[2]
nnmtDataT[2,]
nnmtDataT[2:25,]
nnmtDataT <- t(nnmtData)
View(nnmtDataT)
names <- nnmtDataT[1,]
nnmtData <- read.csv("Nnmt_FPKM.csv")
nnmtDataT <- t(nnmtData)
names <- nnmtDataT[1,]
nnmtDF <- as.data.frame(nnmtDataT[2:25,], colnames = names)
View(nnmtDF)
nnmtDF <- as.data.frame(nnmtDataT[2:25,], colnames = c("sample_id", "Nmnt_FPKM"))
nnmtData <- read.csv("Nnmt_FPKM.csv")
nnmtDataT <- t(nnmtData)
nnmtDF <- as.data.frame(nnmtDataT[2:25,], colnames = c("sample_id", "Nmnt_FPKM"))
View(nnmtDF)
View(nnmtDF)
View(nnmtDataT)
View(nnmtDataT)
nnmtDatafull <- left_join(nnmtData, pData, by = c(0="sample_id"))
nnmtDatafull <- left_join(nnmtData, pData, by = c(row.names="sample_id"))
nnmtDatafull <- left_join(nnmtData, pData, by = c("row.names"="sample_id"))
View(nnmtDF)
pData <- read.csv("~/code/RnaSeq/ballgown/Vanc_pdata.csv")
nnmtDatafull <- left_join(nnmtData, pData, by = c("row.names"="sample_id"))
nnmtDatafull <- left_join(nnmtData, pData, by = c(0="sample_id"))
nnmtDatafull <- left_join(nnmtData, pData, by = c("sample_id"="row.names"))
nnmtDatafull <- left_join(nnmtDF, pData, by = c("row.names"= "sample_id"))
nnmtDF <- as.data.frame(nnmtDataT[2:25,], colnames = c("Nmnt_FPKM"))
View(nnmtDataT)
View(pData)
pData <- read.csv("~/code/RnaSeq/ballgown/Vanc_pdata.csv", rownames = "sample_id")
library(tidyr)
nnmtDFrows <- rownames_to_column(nnmtDF, var = "sample_id")
nnmtDF_tbl <- as_tibble(rownames_to_column(nnmtDF, var = "sample_id"))
nnmtDF_tbl <- tibble::rownames_to_column(nnmtDF, var = "sample_id")
View(nnmtDF_tbl)
names(nnmtDF_tbl)
names(nnmtDF_tbl) <- c("sample_id", "Nnmt_FPKM")
View(nnmtDF_tbl)
nnmtDatafull <- left_join(nnmtDF, pData, by = c("sample_id"= "sample_id"))
nnmtDatafull <- left_join(nnmtDF_tbl, pData, by = c("sample_id"= "sample_id"))
View(nnmtDatafull)
nnmtDatafull <- arrange(nnmtDatafull, condition)
nnmtDatafull <- arrange(nnmtDatafull, desc(condition))
nnmtDatafull <- arrange(nnmtDatafull, desc(treatment))
nnmtDatafull <- arrange(nnmtDatafull, treatment)
write.csv(nnmtDatafull, file="nnmt_fpkm_arranged.csv")
library(ggplot2)
p <- ggplot(nnmtDatafull, aes(x= "sample_id", y= "Nnmt_FPKM"))+
geom_bar()
p
